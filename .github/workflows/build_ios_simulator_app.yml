name: Build iOS .App

on:
  workflow_call:
    inputs:
      owntube_source:
        required: false
        type: string
        description: "The repository with OwnTube-tv/web-client code. Defaults to the source repository."
      use_parent_repo_customizations:
        required: false
        type: boolean
        description: "Should a parent repo be used for customizations? (Required for branded builds)"
      runner-label:
        type: string
        default: "macos-latest"
      customizations_env_content:
        required: false
        type: string
      build_info:
        required: true
        type: string

jobs:
  build_ios_simulator_app:
    runs-on: ${{ inputs.runner-label }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.owntube_source || github.repository }}

      - name: Checkout parent repo with customizations
        uses: actions/checkout@v4
        if: ${{ inputs.use_parent_repo_customizations }}
        with:
          path: customizations

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: cd OwnTube.tv/ && npm install

      - name: Create .env File
        if: ${{ inputs.customizations_env_content != '' }}
        run: |
          echo "${{ inputs.customizations_env_content }}" > ./OwnTube.tv/.env

      - name: Expo Prebuild iOS assets
        run: export LC_CTYPE=UTF-8 && cd OwnTube.tv/ && npx expo prebuild --clean --platform ios

      - name: Inject Build Info
        run: |
          cat > ./OwnTube.tv/build-info.json << 'EOF'
          ${{ inputs.build_info }}
          EOF

      - name: Set Xcode version
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app
          xcodebuild -showsdks

      - name: Build release .app for simulators by @${{ github.actor }}
        run: |
          cd OwnTube.tv/ios/ &&
          WORKSPACE_FILE=$(find . -maxdepth 1 -name "*.xcworkspace")
          SCHEME=$(xcodebuild -list | sed -n '/Schemes:/,$p' | tail -n +2 | head -n 1 | xargs)

          if [[ -n "$WORKSPACE_FILE" && -n "$SCHEME" ]]; then
            echo "Running xcodebuild with workspace $WORKSPACE_FILE and scheme $SCHEME"
            xcodebuild -workspace "$WORKSPACE_FILE" -scheme "$SCHEME" -configuration Release -sdk iphonesimulator18.2 -derivedDataPath ./build-simulator
          else
            echo "Error: No .xcworkspace or scheme file found."
            exit 1
          fi

      - name: Find .app artifact path
        id: find_app
        run: |
          IOS_APP_ARTIFACT_PATH=$(find ./OwnTube.tv/ios/build-simulator/Build/Products/Release-iphonesimulator -maxdepth 1 -name "*.app" | head -n 1)
          echo "IOS_APP_ARTIFACT_PATH=$IOS_APP_ARTIFACT_PATH" >> $GITHUB_OUTPUT

      - name: Upload .app artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-simulator-app.app
          path: "${{ steps.find_app.outputs.IOS_APP_ARTIFACT_PATH }}"
